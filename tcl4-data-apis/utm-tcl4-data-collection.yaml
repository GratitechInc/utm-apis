info:
  description: >-
    "TCL4 will require the submission of test data.  Some of these data are not readily collected via UTM means.  The models presented in this domain are in support of such data that are not readily collected otherwise.  Some of these data will be collected live, some after testing, but all should be collected as a soon as feasible.  Further details will be provided in other testing documentation."
  version: 'alpha'
  title: "Domain for TCL4 data collection models"
  contact:
    name: 'NASA Ames Research Center, Aviation Systems Division'
    url: 'https://utm.arc.nasa.gov/'
    email: joseph.rios@nasa.gov

definitions:
  OffNominalReport:
    required:
      - "report_id"
      - "gufi"
    properties:
      report_id:
        description: >-
          A UUID assingned by the reporting USS for this instance of
           OffNominalReport.
        type: "string"
        format: "uuidv4"
        example: "00000000-0000-4444-9988-bo55beefface"
      contact:
        description: >-
          Contact information of the reporter. Reference utm-commons for model.
        $ref: '#/definitions/PersonOrOrganization'
      reason_for_report:
        description: >-
          The reason for this report.
        type: "string"
        enum:
          - NONCONFORMING
          - ROGUE
          - NONCONFORMING2ROGUE
          - VOLUNTEER
        example: "ROGUE"
      scripted:
        description: >-
          TRUE means operation includes scripted off-nominal event
        type: "boolean"
        example: false
      role_responsibility:
        description: >-
          Reporter role and responsibility. Reporter MUST see the prompt text before inputting data.
        x-utm-offnominal-prompt: "Describe your role and responsibility."
        type: "string"
        minLength: 1
        maxLength: 5000
      gufi:
        description: >-
          GUFI of the operation that is the subject of this report.
        type: "string"
        format: "uuidv4"
        example: "00000000-0000-4444-9988-decadefacade"

  USSExchange:
    required:
      - "measurement_id"
      - "event_id"
      - "exchanged_data_pk"
      - "exchanged_data_type"
      - "source_uss"
      - "target_uss"
      - "reporting_uss_role"
      - "time_request_initiation"
      - "time_request_completed"
      - "actual_http_response"
      - "endpoint"
      - "http_method"
    properties:
      measurement_id:
        description: >-
          A UUID assingned by the reporting USS for this instance of USSExchange.
        type: "string"
        format: "uuidv4"
        example: "00000000-0000-4444-9988-bo55beefface"
      event_id:
        description: >-
          A string provided by the owner of the overall test (likely NASA) that identifies the event within which this data exchange occurs. NASA will define a pattern for this for consistency across tests.
        type: "string"
        minLength: 3
        maxLength: 100
        example: "USS_SPRINT1_SIM_20180723_RUN5"
      exchanged_data_pk:
        description: >-
          The primary key of the data that were exchanged.  For example, if an
          Operation was exchanged, then this field would contain the gufi.

          In the case that multiple data elements were exchnaged (as in a GET
          to the Operations endpoint resulting in multiple Operations returned)
          then just populate this field with one of the primary keys. As a best
          practice, choose the first one in the array as they were sent between
          USSs.
        type: "string"
        format: "uuidv4"
        example: "00000000-0000-4444-9988-decadefacade"
      exchanged_data_type:
        type: "string"
        enum:
          - OPERATION
          - POSITION
          - UTM_MESSAGE
          - CONSTRAINT_MESSAGE
          - NEGOTIATION_MESSAGE
          - USS_INSTANCE
          - DISCOVERY 
          - OTHER_SEE_COMMENT
        example: "POSITION"
      source_uss:
        type: "string"
        format: "dns-name"
        example: "uss.provider123.net"
      target_uss:
        type: "string"
        format: "dns-name"
        example: "utm.cool-uss-team.com"
      reporting_uss_role:
        description: >-
          An enum indicating if the USS providing these data was the one that initiated the request (SOURCE_USS) or the USS that received the request (TARGET_USS).
        type: "string"
        enum:
          - SOURCE_USS
          - TARGET_USS
        example: "SOURCE_USS"
      time_request_initiation:
        description: >-
          If SOURCE_USS, this is the time that the request is sent to the TARGET_USS.
          If TARGET_USS, this is the time that the request was received from the SOURCE_USS.

          Same formatting rules as in other UTM exchanges (ms, 'Z').
        type: "string"
        format: "date-time"
        example: "2015-08-20T14:11:56.118Z"
      time_request_completed:
        description: >-
          If SOURCE_USS, this is the time that the response was received from the TARGET_USS.
          If TARGET_USS, this is the time that the request was sent back to the SOURCE_USS.

          Same formatting rules as in other UTM exchanges (ms, 'Z').
        type: "string"
        format: "date-time"
        example: "2015-08-20T14:11:56.937Z"
      endpoint:
        description: >-
          The endpoint to which the data request was initially sent.
        type: "string"
        format: "url"
        example: "https://utm.cool-uss-team.com/operations"
      http_method:
        description: >-
          The HTTP method used in this exchange.
        type: string
        enum:
          - GET
          - POST
          - PUT
          - DELETE
          - HEAD
          - TRACE
          - OPTIONS
          - CONNECT
          - PATCH
        example: "PUT"
      expected_http_response:
        description: >-
          The expected HTTP response.  This is required ONLY if the reporting_uss_role is SOURCE_USS.
        type: "integer"
        format: "int32"
        minimum: 100
        exclusiveMinimum: false
        maximum: 599
        exclusiveMaximum: false
        example: 204
      actual_http_response:
        description: >-
          The actual HTTP response sent by the TARGET_USS to the SOURCE_USS. Must be reported by USSs in either role.
        type: "integer"
        format: "int32"
        minimum: 100
        exclusiveMinimum: false
        maximum: 599
        exclusiveMaximum: false
        example: 204
      jws:
        description: >-
          The JWS that was included in the data exchange. If a PUT/POST then
          the SOURCE_USS would have generated and sent to TARGET_USS.  If a GET
          then the TARGET_USS would have generated and sent to the SOURCE_USS.
          In either case, both the SOURCE_USS and the TARGET_USS should include
          the resulting JWS here.

          This field is now marked as optional since we will not always be
          exchanging JWS in every simulation.  If JWS is required for the sim
          then this field should also be considered required.

          We currently have no max size for this field, but eventually we should.
        type: "string"
        format: "jws (base64url)"
      jws_public_key:
        description: >-
          If available, include the public key for decoding the jws. Recommended
          whenever jws field is non-null.

          We currently have no max size for this field, but eventually we should.
        type: "string"
        format: "base64"
      comments:
        description: >-
          Any additional comments that could aid in analysis involving these data.
        type: "string"
        maxLength: 1000
        example: "This test was good."
